buildscript {
  repositories {
    mavenCentral()
  }
  dependencies {
    classpath 'org.owasp:dependency-check-gradle:5.2.4'
  }
}

plugins {
  id 'org.springframework.boot' version '2.2.2.RELEASE'
  id 'java'
  id 'jacoco'
  id 'checkstyle'
  id 'war'
  id "org.sonarqube" version "3.0"
}

apply plugin: 'io.spring.dependency-management'
apply plugin: 'org.owasp.dependencycheck'

group = 'uk.co.fivium'
version = System.getenv("DRONE_BRANCH") ? System.getenv("DRONE_BRANCH").replaceAll("[/\\-]", "_") : "LOCAL-SNAPSHOT"
sourceCompatibility = '11'

tasks {
  bootJar {
    archiveFileName.set("${rootProject.name}.jar")
  }
}

sourceSets.main.java.srcDirs += "${buildDir}/generated"

// annotation processor generated classes should be placed in /generated directory.
compileJava {
  options.annotationProcessorGeneratedSourcesDirectory = file("${buildDir}/generated")
}


repositories {
  mavenCentral()
  maven {
    url("http://nexus.fivium.local:8081/repository/maven-releases/")
  }
}

dependencies {

  providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'

  implementation 'org.springframework.boot:spring-boot-starter'
  implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
  implementation 'org.springframework.boot:spring-boot-starter-jdbc'
  implementation 'org.springframework.boot:spring-boot-starter-security'
  implementation 'org.springframework.boot:spring-boot-starter-web'
  implementation 'org.springframework:spring-test'
  implementation 'org.springframework.boot:spring-boot-starter-freemarker'
  implementation 'org.springframework.boot:spring-boot-starter-actuator'
  implementation 'io.micrometer:micrometer-registry-statsd:1.3.2'

  implementation 'org.springframework.boot:spring-boot-starter-quartz'

  compile 'org.flywaydb:flyway-core:5.2.1-FIVIUM'
  compile 'com.oracle:ojdbc7:12.1.0.2'
  compile('uk.gov.service.notify:notifications-java-client:3.17.0-RELEASE')
  compile 'org.springframework.session:spring-session-jdbc'
  compile 'org.camunda.bpm.springboot:camunda-bpm-spring-boot-starter:3.4.1'

  // Required by Hibernate Envers
  // https://mvnrepository.com/artifact/org.hibernate/hibernate-envers
  compile 'org.hibernate:hibernate-envers:5.4.27.Final'

  // automatically generates jpa meta-model for type safe criteria builder queries
  annotationProcessor("javax.xml.bind:jaxb-api")
  annotationProcessor("org.hibernate:hibernate-jpamodelgen")

  compile 'com.google.guava:guava:28.1-jre'
  compile 'org.apache.commons:commons-lang3:3.9'
  compile 'org.apache.commons:commons-collections4:4.4'
  compile group: 'commons-validator', name: 'commons-validator', version: '1.7'

  compile group: 'fi.solita.clamav', name: 'clamav-client', version: '1.0.1'

  // https://mvnrepository.com/artifact/com.openhtmltopdf/openhtmltopdf-core
  compile group: 'com.openhtmltopdf', name: 'openhtmltopdf-core', version: '1.0.4'
  // https://mvnrepository.com/artifact/com.openhtmltopdf/openhtmltopdf-pdfbox
  compile group: 'com.openhtmltopdf', name: 'openhtmltopdf-pdfbox', version: '1.0.4'

  // https://mvnrepository.com/artifact/org.jsoup/jsoup
  compile group: 'org.jsoup', name: 'jsoup', version: '1.13.1'

  // https://mvnrepository.com/artifact/org.imgscalr/imgscalr-lib
  compile group: 'org.imgscalr', name: 'imgscalr-lib', version: '4.2'

  compile group: 'com.atlassian.commonmark', name: 'commonmark', version: '0.15.2'
  compile group: 'com.atlassian.commonmark', name: 'commonmark-ext-gfm-tables', version: '0.15.2'

  testCompile 'com.h2database:h2:1.4.197'
  testCompile 'nl.jqno.equalsverifier:equalsverifier:3.1.8'
  testImplementation 'org.springframework.boot:spring-boot-starter-test'
  testImplementation 'org.springframework.security:spring-security-test'
}

checkstyle {
  config = rootProject.resources.text.fromFile('ide/checkstyle.xml')
  toolVersion '8.28'
  ignoreFailures = false
  maxWarnings = 0
  // Sets suppressionFile property so checkstyle during build ignores generated files.
  // The default path used by ide is not relative so will cause failures if that is used in isolation.
  configProperties = [ "suppressionFile" : project(':').file('ide/checkstyle-suppression.xml')]
}

dependencyCheck {
  data {
    // Point to a persisted volume in drone, to avoid having to re-download the whole CVE database each run.
    // Comment this out to run locally
    directory='/var/nvd-db'
  }
}

tasks.jacocoTestReport {
  reports {
    xml.enabled(true)
    html.enabled(false)
  }
}

sonarqube {
  properties {
    property("sonar.projectKey", "fiviumuk_pipeline-works-authorisations")
    property("sonar.host.url", "https://sonarcloud.io")
    property("sonar.login", System.getenv("SONARCLOUD_TOKEN"))
    property("sonar.organization", "fivium")
    property("sonar.branch.name", System.getenv("DRONE_BRANCH"))
    if (System.getenv("DRONE_BRANCH").startsWith("feature")) {
      property("sonar.branch.target", "develop")
    }
    property("sonar.exclusions", "src/test/**, src/main/resources/public/assets/**, fivium-design-system-core/**, src/main/resources/templates/fds/**, build/**")
    property("sonar.sources", "src")
  }
}
